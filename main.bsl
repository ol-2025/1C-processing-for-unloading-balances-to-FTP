

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТекДата = ТекущаяДата();
	Объект.ДатаНачала = Формат(ТекДата, "ДФ=dd.MM.yyyy");
	Объект.ПутьКФайлу = "";
КонецПроцедуры

//1.1
&НаСервере
Процедура ПолучитьОстаткиНаСервере()
	Объект.Запасы.Очистить(); 
	Если Объект.Склад.Пустая() и Объект.Пометка = Ложь Тогда
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = "Заполните реквизит склад или выберите параметр по всем складам";
        Сообщение.Сообщить(); 
        Возврат;
    КонецЕсли;
    
	Если Объект.Пометка = Ложь Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	спрНоменклатура.Код КАК Код,
		|	спрНоменклатура.Наименование КАК Номенклатура,
		|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
		|	ЗапасыОстатки.СтруктурнаяЕдиница КАК Склад,
		|	ЗапасыОстатки.СтруктурнаяЕдиница.Код КАК КодСклада
		|ИЗ
		|	Справочник.Номенклатура КАК спрНоменклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(
		|				,
		|				&СтруктурнаяЕдиница = НЕОПРЕДЕЛЕНО
		|					ИЛИ СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ЗапасыОстатки
		|		ПО спрНоменклатура.Ссылка = ЗапасыОстатки.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	спрНоменклатура.Наименование,
		|	спрНоменклатура.Код,
		|	ЗапасыОстатки.СтруктурнаяЕдиница,
		|	ЗапасыОстатки.СтруктурнаяЕдиница.Код
		| ИМЕЮЩИЕ
	    |      СУММА(ЗапасыОстатки.КоличествоОстаток) > 0";
		
		
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Объект.Склад);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
		 Сообщение = Новый СообщениеПользователю;
		 Сообщение.Текст = "На данном складе остатков нет";
		 Сообщение.Сообщить();
		Возврат;	
		КонецЕсли;
				
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			СтрокаТаблицы = Объект.Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы,Выборка);
		КонецЦикла;
		
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	спрНоменклатура.Код КАК Код,
		|	спрНоменклатура.Наименование КАК Номенклатура,
		|	СУММА(ЗапасыОстатки.КоличествоОстаток) КАК КоличествоОстаток,
		|	ЗапасыОстатки.СтруктурнаяЕдиница КАК Склад,
		|	ЗапасыОстатки.СтруктурнаяЕдиница.Код КАК КодСклада
		|ИЗ
		|	Справочник.Номенклатура КАК спрНоменклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Запасы.Остатки(, ) КАК ЗапасыОстатки
		|		ПО спрНоменклатура.Ссылка = ЗапасыОстатки.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	спрНоменклатура.Наименование,
		|	спрНоменклатура.Код,
		|	ЗапасыОстатки.СтруктурнаяЕдиница,
		|	ЗапасыОстатки.СтруктурнаяЕдиница.Код
		| ИМЕЮЩИЕ
	    |      СУММА(ЗапасыОстатки.КоличествоОстаток) > 0";
		
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			СтрокаТаблицы = Объект.Запасы.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы,Выборка);
			
		КонецЦикла;
		
		
		
	КонецЕсли;
	
	
КонецПроцедуры

//1
&НаКлиенте
Процедура ПолучитьОстатки(Команда)
	ОчиститьСообщения();		
	ПолучитьОстаткиНаСервере();
КонецПроцедуры


&НаСервере
Процедура ПометкаПриИзмененииНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура ПометкаПриИзменении(Элемент)
	ПометкаПриИзмененииНаСервере();
	Если Объект.Пометка = Истина Тогда
		Элементы.Склад.Видимость = Ложь;
	Иначе
		Элементы.Склад.Видимость = Истина;
		Объект.Запасы.Очистить();
	КонецЕсли;
КонецПроцедуры

 //2
&НаСервере
Процедура СформироватьФайлНаСервере(ПутьКФайлу)	
    	Попытка
		
		Объект.ПутьКФайлу = ПутьКФайлу + "_Остатки.xml";		
		//Объект.ПутьКФайлу = "C:\Users\Oleg\Desktop\Новая папка\остатки.xml";
		ЗаписьXML = Новый ЗаписьXML;
		ЗаписьXML.ОткрытьФайл(Объект.ПутьКФайлу);
		ЗаписьXML.ЗаписатьОбъявлениеXML(); 
		ЗаписьXML.ЗаписатьНачалоЭлемента("Остатки");
		
		Для каждого СтрокаТЧ Из Объект.Запасы Цикл 
			ЗаписьXML.ЗаписатьНачалоЭлемента("Товар");
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("КодНоменклатуры");
			ЗаписьXML.ЗаписатьТекст(СтрокаТЧ.Код);
			ЗаписьXML.ЗаписатьКонецЭлемента();
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("Номенклатура");
			ЗаписьXML.ЗаписатьТекст(СтрокаТЧ.Номенклатура);
			ЗаписьXML.ЗаписатьКонецЭлемента();
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("Склад");
			ЗаписьXML.ЗаписатьТекст(СтрокаТЧ.Склад.Наименование);
			ЗаписьXML.ЗаписатьКонецЭлемента();  
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("КодСклада");
			ЗаписьXML.ЗаписатьТекст(СтрокаТЧ.КодСклада);
			ЗаписьXML.ЗаписатьКонецЭлемента();  
			
			ЗаписьXML.ЗаписатьНачалоЭлемента("КоличествоОстаток");
			ЗаписьXML.ЗаписатьТекст(Строка(СтрокаТЧ.КоличествоОстаток));
			ЗаписьXML.ЗаписатьКонецЭлемента();  
			
			ЗаписьXML.ЗаписатьКонецЭлемента();
		КонецЦикла;
		ЗаписьXML.ЗаписатьКонецЭлемента();
		ЗаписьXML.Закрыть();
		
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Ошибка"+ОписаниеОшибки();
		Сообщение.Сообщить();
	КонецПопытки;  
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Файл с остатками сформирован!";
	Сообщение.Сообщить();	
	
КонецПроцедуры


&НаКлиенте
Процедура СформироватьФайл(Команда)
	ОчиститьСообщения();
	Если Объект.Запасы.Количество() = 0 Тогда
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = "Нет данных для формирования файла! Сначала получите остатки.";
        Сообщение.Сообщить();
        Возврат; 
    КонецЕсли;

 ДиалогВыбораФайла();
КонецПроцедуры

 //3
&НаСервере
Процедура ВыгрузитьНаFTPНаСервере()
	
	Если Объект.Запасы.Количество() = 0 Тогда
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = "Нет данных для выгрузки! Сначала получите остатки.";
        Сообщение.Сообщить();
        Возврат;
	КонецЕсли;
	
	 Если Объект.ПутьКФайлу = ""  Тогда
        Сообщение = Новый СообщениеПользователю;
        Сообщение.Текст = "Файл не сформирован! Сначала сформируйте файл.";
        Сообщение.Сообщить();
        Возврат;
	КонецЕсли;
	
	Если  Объект.АдрессFTP = ""   тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Заполните Адрес FTP";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли; 
	
	Если  Объект.Логин = ""   тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Заполните Логин";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если  Объект.Пароль = ""   тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Введите пароль";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Попытка
		ФтпСервер = Новый FTPСоединение(Объект.АдрессFTP,,Объект.Логин,Объект.Пароль);
		ФтпСервер.УстановитьТекущийКаталог("/"); 
		
		ИмяФайлаНаFTP = "/ostatok_" + Формат(ТекущаяДата(), "ДФ=yyyyMMddЧЧммсс") + ".xml";
        ФтпСервер.Записать(Объект.ПутьКФайлу, ИмяФайлаНаFTP);
		
		//ФтпСервер.Записать(Объект.ПутьКФайлу,"/ostatok.xml");
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Файл успешно выгружен на FTP: " + ИмяФайлаНаFTP;
		Сообщение.Сообщить();
		
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Ошибка"+ОписаниеОшибки();
		Сообщение.Сообщить();
	КонецПопытки;
КонецПроцедуры


&НаКлиенте
Процедура ВыгрузитьНаFTP(Команда)
	ОчиститьСообщения();
	ВыгрузитьНаFTPНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДиалогВыбораФайла()
	Проводник = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Проводник.Фильтр = "*.xml";
	Оповещение = новый ОписаниеОповещения("ЧтоДелатьПосле",ЭтотОбъект);
	Проводник.Показать( Оповещение);
КонецПроцедуры 

&НаКлиенте
Процедура ЧтоДелатьПосле(ВыбранныеФайлы,ДополнительныеПараметры) Экспорт
	Если ВыбранныеФайлы = Неопределено Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Каталог для сохранения не выбран выберете место для сохранения файла!";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ПутьКФайлу = ВыбранныеФайлы[0]; 
	СформироватьФайлНаСервере(ПутьКФайлу);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПарольПриИзменении(Элемент)
	Если ПоказатьПароль = Истина Тогда
		Элементы.Пароль.РежимПароля = Ложь
	иначе
		Элементы.Пароль.РежимПароля = истина;
	КонецЕсли;
КонецПроцедуры






